{"ast":null,"code":"import _defineProperty from \"/home/arko/Desktop/projects/react-calculator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initstate = {\n  colorBackground: \"#fff\",\n  colorButtons: \"#f0f0f0\",\n  colorFont: \"#000\"\n};\n\nconst reducer = (oldState = initstate, action) => {\n  let newState = _objectSpread({}, oldState);\n\n  switch (action.type) {\n    case \"LIGHT_MODE\":\n      newState = {\n        colorBackground: \"#fff\",\n        colorButtons: \"#f0f0f0\",\n        colorFont: \"#000\"\n      };\n      break;\n\n    case \"DARK_MODE\":\n      newState = {\n        colorBackground: \"#000\",\n        colorButtons: \"#666\",\n        colorFont: \"#fff\"\n      };\n  }\n\n  return newState;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/arko/Desktop/projects/react-calculator/src/reducers/reducer.js"],"names":["initstate","colorBackground","colorButtons","colorFont","reducer","oldState","action","newState","type"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AACZC,EAAAA,eAAe,EAAE,MADL;AAEZC,EAAAA,YAAY,EAAE,SAFF;AAGZC,EAAAA,SAAS,EAAE;AAHC,CAAlB;;AAMA,MAAMC,OAAO,GAAG,CAACC,QAAQ,GAAGL,SAAZ,EAAuBM,MAAvB,KAAkC;AAChD,MAAIC,QAAQ,qBACLF,QADK,CAAZ;;AAGA,UAAOC,MAAM,CAACE,IAAd;AACI,SAAK,YAAL;AACMD,MAAAA,QAAQ,GAAC;AACLN,QAAAA,eAAe,EAAE,MADZ;AAELC,QAAAA,YAAY,EAAE,SAFT;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAT;AAKA;;AAEN,SAAK,WAAL;AACMI,MAAAA,QAAQ,GAAC;AACJN,QAAAA,eAAe,EAAE,MADb;AAEJC,QAAAA,YAAY,EAAE,MAFV;AAGJC,QAAAA,SAAS,EAAE;AAHP,OAAT;AAVV;;AAkBA,SAAOI,QAAP;AAED,CAxBD;;AA0BA,eAAeH,OAAf","sourcesContent":["const initstate = {\n      colorBackground: \"#fff\",\n      colorButtons: \"#f0f0f0\",\n      colorFont: \"#000\"\n};\n\nconst reducer = (oldState = initstate, action) => {\n  let newState={\n      ...oldState\n  }\n  switch(action.type){\n      case \"LIGHT_MODE\":\n            newState={\n                colorBackground: \"#fff\",\n                colorButtons: \"#f0f0f0\",\n                colorFont: \"#000\"\n            }\n            break;\n\n      case \"DARK_MODE\":\n            newState={\n                 colorBackground: \"#000\",\n                 colorButtons: \"#666\",\n                 colorFont: \"#fff\"\n            }\n            \n  }\n\n  return newState;\n  \n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}