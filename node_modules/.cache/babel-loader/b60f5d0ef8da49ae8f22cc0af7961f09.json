{"ast":null,"code":"var _jsxFileName = \"/home/arko/Desktop/projects/react-calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Display from './Components/Display';\nimport Button from './Components/Button';\n\nclass App extends Component {\n  //constructor\n  constructor(props) {\n    super(props);\n\n    this.getInput = a => {\n      this.setState({\n        input: this.state.input + a\n      });\n    };\n\n    this.doProcess = op => {\n      let input1 = parseInt(this.state.input);\n\n      switch (this.state.prevOperand) {\n        case \"+\":\n          this.setState({\n            prevNum: this.state.prevNum + input1,\n            input: \"\"\n          });\n          break;\n\n        case \"-\":\n          if (this.state.input === \"\") {\n            this.setState({\n              input: \"-123\"\n            });\n          } else {\n            this.setState({\n              prevNum: this.state.prevNum - input1,\n              input: \"\"\n            });\n          }\n\n          break;\n\n        case \"*\":\n          this.setState({\n            prevNum: this.state.prevNum * input1,\n            input: \"\"\n          });\n          break;\n\n        case \"/\":\n          this.setState({\n            prevNum: this.state.prevNum / input1,\n            input: \"\"\n          });\n          break;\n\n        case \"=\":\n          this.setState({\n            prevNum: this.state.prevNum\n          });\n          break;\n\n        default:\n          this.setState({\n            input: \"ERROR\"\n          });\n      }\n\n      this.setState({\n        prevOperand: op\n      });\n    };\n\n    this.doClearOp = () => {\n      this.setState({\n        prevNum: 0,\n        input: \"\"\n      });\n    };\n\n    this.showScientificFunctions = () => {\n      const getVal = this.state.showScientific;\n      this.setState({\n        showScientific: !getVal\n      });\n    };\n\n    this.flipInput = () => {\n      this.setState({\n        input: -this.state.input\n      });\n    };\n\n    this.computeSquare = () => {\n      this.setState({\n        prevNum: this.state.input * this.state.input,\n        input: \"\"\n      });\n    };\n\n    this.computeSqRoot = () => {\n      this.setState({\n        prevNum: Math.sqrt(this.state.input),\n        input: \"\"\n      });\n    };\n\n    this.styles = {\n      primaryBtn: {\n        border: \"1px solid #000\",\n        width: \"25%\",\n        textAlign: \"center\",\n        padding: \"30px\"\n      }\n    };\n    this.state = {\n      input: \"\",\n      prevNum: 0,\n      prevOperand: \"+\",\n      showScientific: false,\n      numSquare: 0\n    };\n  }\n\n  render() {\n    console.log(\"[DEBUG: RENDER] prevNum: \" + this.state.prevNum + \" and input: \" + this.state.input);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Display, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.input === \"\" ? this.state.prevNum.toString() : this.state.input), React.createElement(\"div\", {\n      className: \"keypad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      click: () => this.getInput(\"1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"1\"), React.createElement(Button, {\n      click: () => this.getInput(\"2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"2\"), React.createElement(Button, {\n      click: () => this.getInput(\"3\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"3\"), React.createElement(Button, {\n      click: () => this.doProcess(\"+\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      click: () => this.getInput(\"4\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"4\"), React.createElement(Button, {\n      click: () => this.getInput(\"5\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"5\"), React.createElement(Button, {\n      click: () => this.getInput(\"6\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"6\"), React.createElement(Button, {\n      click: () => this.doProcess(\"-\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"-\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Button, {\n      click: () => this.getInput(\"7\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"7\"), React.createElement(Button, {\n      click: () => this.getInput(\"8\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"8\"), React.createElement(Button, {\n      click: () => this.getInput(\"9\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"9\"), React.createElement(Button, {\n      click: () => this.doProcess(\"*\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      click: () => this.doClearOp(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"clear\"), React.createElement(Button, {\n      click: () => this.getInput(\"0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"0\"), React.createElement(Button, {\n      click: () => this.doProcess(\"=\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"=\"), React.createElement(Button, {\n      click: () => this.doProcess(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"/\")), React.createElement(Button, {\n      style: {\n        width: \"100%\"\n      },\n      click: () => this.showScientificFunctions(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Scientific mode!\"), this.state.showScientific ? React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: \"33.33%\"\n      },\n      click: () => this.flipInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Sign Flip\"), React.createElement(Button, {\n      style: {\n        width: \"33.33%\"\n      },\n      click: () => this.computeSquare(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Square\"), React.createElement(Button, {\n      style: {\n        width: \"33.33%\"\n      },\n      click: () => this.computeSqRoot(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Sq root\")) : \"\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/arko/Desktop/projects/react-calculator/src/App.js"],"names":["React","Component","Display","Button","App","constructor","props","getInput","a","setState","input","state","doProcess","op","input1","parseInt","prevOperand","prevNum","doClearOp","showScientificFunctions","getVal","showScientific","flipInput","computeSquare","computeSqRoot","Math","sqrt","styles","primaryBtn","border","width","textAlign","padding","numSquare","render","console","log","toString"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Display from './Components/Display';\nimport Button from './Components/Button';\n\nclass App extends Component {\n\n  //constructor\n  constructor(props){\n    super(props);\n  \n    this.styles={\n      primaryBtn:{\n        border:\"1px solid #000\",\n        width:\"25%\",\n        textAlign:\"center\",\n        padding:\"30px\"\n      }\n    }\n\n    this.state ={\n      input: \"\",\n      prevNum: 0,\n      prevOperand: \"+\",\n      showScientific: false,\n      numSquare: 0\n    }\n\n  }\n\n  getInput = (a) => {\n    this.setState({ input: this.state.input+a})\n  }\n\n  doProcess = (op) => {\n    let input1 = parseInt(this.state.input);\n\n    switch(this.state.prevOperand ){\n      case \"+\":\n          this.setState({ prevNum: this.state.prevNum + input1 , input:\"\"});\n          break;\n      \n      case \"-\":\n          if(this.state.input === \"\"){\n            this.setState({ input: \"-123\"})\n          }else{\n            this.setState({ prevNum: this.state.prevNum - input1 , input:\"\"});\n          }\n          break;\n\n      case \"*\":\n          this.setState({ prevNum: this.state.prevNum * input1 , input:\"\"});\n          break;\n\n      case \"/\":\n          this.setState({ prevNum: this.state.prevNum / input1 , input:\"\"});\n          break;\n\n      case \"=\":\n          this.setState({ prevNum: this.state.prevNum });\n          break;\n\n      default:\n          this.setState({input: \"ERROR\"});\n    }\n\n    this.setState({prevOperand: op});\n  }\n\n  //Triggers when clear button is pressed\n  doClearOp = () => {\n    this.setState({ prevNum: 0 , input:\"\"});\n  }\n\n\n\n\n  /*\n  * FUNCTIONS FOR TASK 2!\n  */\n  showScientificFunctions = () => {\n    const getVal = this.state.showScientific;\n    this.setState({\n      showScientific: !getVal\n    })\n  }\n  \n  flipInput = () => { this.setState({ input: -this.state.input });}\n  computeSquare = () => { this.setState({prevNum: this.state.input * this.state.input, input:\"\"});}\n  computeSqRoot = () => {\n    this.setState({\n      prevNum: Math.sqrt(this.state.input), input: \"\"\n    })\n  }\n  render(){\n    console.log(\"[DEBUG: RENDER] prevNum: \"+this.state.prevNum+\" and input: \"+this.state.input);\n   return (\n    <div className=\"container\">\n      \n      <Display>    \n          {this.state.input === \"\" ? this.state.prevNum.toString() : this.state.input}\n      </Display>\n\n      <div className=\"keypad\"> \n        <div className=\"BtnRow\">\n          <Button click={() => this.getInput(\"1\")}>1</Button>\n          <Button click={() => this.getInput(\"2\")}>2</Button>\n          <Button click={() => this.getInput(\"3\")}>3</Button>\n          <Button click={() => this.doProcess(\"+\")}>+</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button click={() => this.getInput(\"4\")} >4</Button>\n          <Button click={() => this.getInput(\"5\")} >5</Button>\n          <Button click={() => this.getInput(\"6\")} >6</Button>\n          <Button click={() => this.doProcess(\"-\")} >-</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button click={() => this.getInput(\"7\")} >7</Button>\n          <Button click={() => this.getInput(\"8\")}>8</Button>\n          <Button click={() => this.getInput(\"9\")} >9</Button>\n          <Button click={() => this.doProcess(\"*\")}>*</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button click={() => this.doClearOp()} >clear</Button>\n          <Button click={() => this.getInput(\"0\")}>0</Button>\n          <Button click={() => this.doProcess(\"=\")}>=</Button>\n          <Button click={() => this.doProcess(\"/\")}>/</Button>\n        </div>\n\n        <Button style={{width:\"100%\"}} click={() => this.showScientificFunctions()}>Scientific mode!</Button>\n\n        {this.state.showScientific ?\n               <div className=\"BtnRow\">\n                 <Button style={{width:\"33.33%\"}} click={() => this.flipInput()}>Sign Flip</Button>\n                 <Button style={{width:\"33.33%\"}} click={() => this.computeSquare()}>Square</Button>\n                 <Button style={{width:\"33.33%\"}} click={() => this.computeSqRoot()}>Sq root</Button>\n               </div>  \n             : \"\" }\n        \n      </div>\n    </div>\n   );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}