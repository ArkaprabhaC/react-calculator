{"ast":null,"code":"var _jsxFileName = \"/home/arko/Desktop/react-calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Display from './Components/Display';\nimport Button from './Components/Button';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  //constructor\n  constructor(props) {\n    super(props);\n\n    this.getInput = a => {\n      if (this.state.input === \"0\") {\n        this.setState({\n          input: a\n        });\n      } else {\n        this.setState({\n          input: this.state.input + a\n        });\n      }\n    };\n\n    this.doProcess = op => {\n      const input1 = parseInt(this.state.input);\n\n      if (this.state.prevNum === 0) {\n        this.setState({\n          input: op,\n          input: \"\"\n        });\n      }\n\n      switch (this.state.prevOperand) {\n        case \"+\":\n          this.setState({\n            prevNum: this.state.prevNum + input1,\n            input: \"0\"\n          });\n          break;\n\n        case \"-\":\n          this.setState({\n            prevNum: this.state.prevNum - input1,\n            input: \"0\"\n          });\n          break;\n\n        case \"*\":\n          this.setState({\n            prevNum: this.state.prevNum * input1,\n            input: \"0\"\n          });\n          break;\n\n        case \"/\":\n          this.setState({\n            prevNum: this.state.prevNum / input1,\n            input: \"0\"\n          });\n          break;\n\n        case \"=\":\n          this.setState({\n            prevNum: this.state.prevNum\n          });\n          break;\n\n        default:\n          this.setState({\n            input: \"ERROR\"\n          });\n      }\n\n      this.setState({\n        prevOperand: op\n      });\n    };\n\n    this.doClearOp = () => {\n      this.setState({\n        prevNum: 0,\n        input: \"0\",\n        prevOperand: \"+\"\n      });\n    };\n\n    this.showScientificFunctions = () => {\n      const getVal = this.state.showScientific;\n      this.setState({\n        showScientific: !getVal\n      });\n    };\n\n    this.flipInput = () => {\n      this.setState({\n        input: (-parseInt(this.state.input)).toString()\n      });\n    };\n\n    this.computeSquare = () => {\n      this.setState({\n        prevNum: parseInt(this.state.input) * parseInt(this.state.input),\n        input: \"0\"\n      });\n    };\n\n    this.computeSqRoot = () => {\n      this.setState({\n        prevNum: Math.sqrt(parseInt(this.state.input)),\n        input: \"0\"\n      });\n    };\n\n    this.state = {\n      input: \"0\",\n      prevNum: 0,\n      prevOperand: \"+\",\n      showScientific: false\n    };\n  }\n\n  /*\n  * FUNCTIONS FOR TASK 3!\n  */\n  componentDidUpdate() {\n    document.body.style.backgroundColor = this.props.backGroundColor;\n  }\n\n  render() {\n    console.log(\"[DEBUG: RENDER] prevNum: \" + this.state.prevNum + \" and input: \" + this.state.input);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Display, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.input === \"0\" ? this.state.prevNum.toString() : this.state.input), React.createElement(\"div\", {\n      className: \"keypad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"1\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"2\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"3\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"3\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"+\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"4\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"4\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"5\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"5\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"6\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"6\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"-\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"-\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"7\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"7\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"8\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"8\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"9\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"9\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"*\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doClearOp(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"clear\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"0\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"=\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"=\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"/\")), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor,\n        width: \"100%\"\n      },\n      click: () => this.showScientificFunctions(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Scientific mode!\"), this.state.showScientific ? React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor,\n        width: \"33.33%\"\n      },\n      click: () => this.flipInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Sign Flip\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor,\n        width: \"33.33%\"\n      },\n      click: () => this.computeSquare(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Square\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor,\n        width: \"33.33%\"\n      },\n      click: () => this.computeSqRoot(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Sq root\")) : \"\", React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor,\n        width: \"50%\"\n      },\n      click: this.props.LightTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Light Theme\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor,\n        width: \"50%\"\n      },\n      click: this.props.DarkTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Dark Theme\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    backGroundColor: state.colorBackground,\n    buttonColor: state.colorButtons,\n    buttonFontColor: state.colorFont\n  };\n};\n\nconst mapDipatchToProps = dispatch => {\n  return {\n    LightTheme: () => {\n      dispatch({\n        type: \"LIGHT_MODE\"\n      });\n    },\n    DarkTheme: () => {\n      dispatch({\n        type: \"DARK_MODE\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDipatchToProps)(App);","map":{"version":3,"sources":["/home/arko/Desktop/react-calculator/src/App.js"],"names":["React","Component","Display","Button","connect","App","constructor","props","getInput","a","state","input","setState","doProcess","op","input1","parseInt","prevNum","prevOperand","doClearOp","showScientificFunctions","getVal","showScientific","flipInput","toString","computeSquare","computeSqRoot","Math","sqrt","componentDidUpdate","document","body","style","backgroundColor","backGroundColor","render","console","log","buttonColor","color","buttonFontColor","width","LightTheme","DarkTheme","mapStateToProps","colorBackground","colorButtons","colorFont","mapDipatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Display from './Components/Display';\nimport Button from './Components/Button';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n\n  //constructor\n  constructor(props){\n    super(props);\n    this.state ={\n      input: \"0\",\n      prevNum: 0,\n      prevOperand: \"+\",\n      showScientific: false,\n    }\n  }\n\n  getInput = (a) => { \n    if(this.state.input === \"0\"){\n      this.setState({ input: a})\n    }else{\n      this.setState({ input: this.state.input+a})\n    } \n  }\n\n  doProcess = (op) => {\n    const input1 = parseInt(this.state.input);\n\n    if(this.state.prevNum === 0){\n      this.setState({ input: op, input: \"\"});\n    }\n    switch(this.state.prevOperand ){\n      case \"+\":\n          this.setState({ prevNum: this.state.prevNum + input1 , input:\"0\"});\n          break;\n      \n      case \"-\":\n          this.setState({ prevNum: this.state.prevNum - input1 , input:\"0\"});\n          break;\n\n      case \"*\":\n          this.setState({ prevNum: this.state.prevNum * input1 , input:\"0\"});\n          break;\n\n      case \"/\":\n          this.setState({ prevNum: this.state.prevNum / input1 , input:\"0\"});\n          break;\n\n      case \"=\":\n          this.setState({ prevNum: this.state.prevNum });\n          break;\n\n      default:\n          this.setState({input: \"ERROR\"});\n    }\n\n    this.setState({prevOperand: op});\n  }\n\n  //Triggers when clear button is pressed\n  doClearOp = () => {\n    this.setState({ prevNum: 0 , input:\"0\", prevOperand: \"+\"});\n  }\n\n  /*\n  * FUNCTIONS FOR TASK 2!\n  */\n  showScientificFunctions = () => {\n    const getVal = this.state.showScientific;\n    this.setState({\n      showScientific: !getVal\n    })\n  }\n  \n  flipInput = () => { this.setState({ input: (-parseInt(this.state.input)).toString() });}\n  computeSquare = () => { this.setState({prevNum: parseInt(this.state.input) * parseInt(this.state.input), input:\"0\"});}\n  computeSqRoot = () => { this.setState({ prevNum: Math.sqrt(parseInt(this.state.input)), input: \"0\"});}\n\n  /*\n  * FUNCTIONS FOR TASK 3!\n  */\n   componentDidUpdate(){\n     document.body.style.backgroundColor =  this.props.backGroundColor;\n   }\n\n  render(){\n    console.log(\"[DEBUG: RENDER] prevNum: \"+this.state.prevNum+\" and input: \"+this.state.input);\n   return (\n    <div className=\"container\">\n      <Display>    \n          {this.state.input === \"0\" ? this.state.prevNum.toString() : this.state.input}\n      </Display>\n      <div className=\"keypad\"> \n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"1\")}>1</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"2\")}>2</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"3\")}>3</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"+\")}>+</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"4\")} >4</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"5\")} >5</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"6\")} >6</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"-\")} >-</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"7\")} >7</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"8\")}>8</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"9\")} >9</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"*\")}>*</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doClearOp()} >clear</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"0\")}>0</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"=\")}>=</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"/\")}>/</Button>\n        </div>\n\n        <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor,width:\"100%\"}} click={() => this.showScientificFunctions()}>Scientific mode!</Button>\n\n        {this.state.showScientific ?\n               <div className=\"BtnRow\">\n                 <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor,width:\"33.33%\"}} click={() => this.flipInput()}>Sign Flip</Button>\n                 <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor,width:\"33.33%\"}} click={() => this.computeSquare()}>Square</Button>\n                 <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor,width:\"33.33%\"}} click={() => this.computeSqRoot()}>Sq root</Button>\n               </div>  \n             : \"\" }\n\n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor,width: \"50%\"}} click={this.props.LightTheme}>Light Theme</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor,width: \"50%\"}} click={this.props.DarkTheme}>Dark Theme</Button>\n        </div>\n        \n      </div>\n    </div>\n\n   );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      backGroundColor: state.colorBackground,\n      buttonColor: state.colorButtons,\n      buttonFontColor: state.colorFont\n  };\n}\nconst mapDipatchToProps = (dispatch) => {\n  return {\n      LightTheme : () => {dispatch({type: \"LIGHT_MODE\"})},\n      DarkTheme : () => {dispatch({type: \"DARK_MODE\"})}\n     \n  };\n}\n\nexport default connect(mapStateToProps,mapDipatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}