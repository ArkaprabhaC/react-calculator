{"ast":null,"code":"var _jsxFileName = \"/home/arko/Desktop/projects/react-calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Display from './Components/Display';\nimport Button from './Components/Button';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  //constructor\n  constructor(props) {\n    super(props);\n\n    this.getInput = a => {\n      this.setState({\n        input: this.state.input + a\n      });\n    };\n\n    this.doProcess = op => {\n      let input1 = parseInt(this.state.input);\n\n      switch (this.state.prevOperand) {\n        case \"+\":\n          this.setState({\n            prevNum: this.state.prevNum + input1,\n            input: \"\"\n          });\n          break;\n\n        case \"-\":\n          this.setState({\n            prevNum: this.state.prevNum - input1,\n            input: \"\"\n          });\n          break;\n\n        case \"*\":\n          this.setState({\n            prevNum: this.state.prevNum * input1,\n            input: \"\"\n          });\n          break;\n\n        case \"/\":\n          this.setState({\n            prevNum: this.state.prevNum / input1,\n            input: \"\"\n          });\n          break;\n\n        case \"=\":\n          this.setState({\n            prevNum: this.state.prevNum\n          });\n          break;\n\n        default:\n          this.setState({\n            input: \"ERROR\"\n          });\n      }\n\n      this.setState({\n        prevOperand: op\n      });\n    };\n\n    this.doClearOp = () => {\n      this.setState({\n        prevNum: 0,\n        input: \"\"\n      });\n    };\n\n    this.showScientificFunctions = () => {\n      const getVal = this.state.showScientific;\n      this.setState({\n        showScientific: !getVal\n      });\n    };\n\n    this.flipInput = () => {\n      this.setState({\n        input: -this.state.input\n      });\n    };\n\n    this.computeSquare = () => {\n      this.setState({\n        prevNum: this.state.input * this.state.input,\n        input: \"\"\n      });\n    };\n\n    this.computeSqRoot = () => {\n      this.setState({\n        prevNum: Math.sqrt(this.state.input),\n        input: \"\"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      prevNum: 0,\n      prevOperand: \"+\",\n      showScientific: false\n    };\n    this.style = {\n      btn: {\n        btnColor: this.props.buttonColor,\n        btnFontColor: this.props.buttonFontColor\n      }\n    };\n  }\n\n  /*\n  * FUNCTIONS FOR TASK 3!\n  */\n  componentDidUpdate() {\n    console.log(\"bg is \" + this.props.backGroundColor);\n    document.body.style.backgroundColor = this.props.backGroundColor;\n  }\n\n  render() {\n    //console.log(\"[DEBUG: RENDER] prevNum: \"+this.state.prevNum+\" and input: \"+this.state.input);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Display, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.input === \"\" ? this.state.prevNum.toString() : this.state.input), React.createElement(\"div\", {\n      className: \"keypad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"1\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"2\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"3\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"3\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"+\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"4\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"4\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"5\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"5\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"6\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"6\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"-\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"-\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"7\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"7\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"8\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"8\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"9\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"9\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"*\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doClearOp(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"clear\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.getInput(\"0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"0\"), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor\n      },\n      click: () => this.doProcess(\"=\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"=\"), React.createElement(Button, {\n      style: this.style.btn,\n      click: () => this.doProcess(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"/\")), React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor,\n        width: \"100%\"\n      },\n      click: () => this.showScientificFunctions(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Scientific mode!\"), this.state.showScientific ? React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: this.props.buttonColor,\n        color: this.props.buttonFontColor,\n        width: \"33.33%\"\n      },\n      click: () => this.flipInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Sign Flip\"), React.createElement(Button, {\n      style: {\n        width: \"33.33%\"\n      },\n      click: () => this.computeSquare(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Square\"), React.createElement(Button, {\n      style: {\n        width: \"33.33%\"\n      },\n      click: () => this.computeSqRoot(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Sq root\")) : \"\", React.createElement(\"div\", {\n      className: \"BtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: \"50%\"\n      },\n      click: this.props.LightTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Light Theme\"), React.createElement(Button, {\n      style: {\n        width: \"50%\"\n      },\n      click: this.props.DarkTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Dark Theme\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    backGroundColor: state.colorBackground,\n    buttonColor: state.colorButtons,\n    buttonFontColor: state.colorFont\n  };\n};\n\nconst mapDipatchToProps = dispatch => {\n  return {\n    LightTheme: () => {\n      dispatch({\n        type: \"LIGHT_MODE\"\n      });\n    },\n    DarkTheme: () => {\n      dispatch({\n        type: \"DARK_MODE\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDipatchToProps)(App);","map":{"version":3,"sources":["/home/arko/Desktop/projects/react-calculator/src/App.js"],"names":["React","Component","Display","Button","connect","App","constructor","props","getInput","a","setState","input","state","doProcess","op","input1","parseInt","prevOperand","prevNum","doClearOp","showScientificFunctions","getVal","showScientific","flipInput","computeSquare","computeSqRoot","Math","sqrt","style","btn","btnColor","buttonColor","btnFontColor","buttonFontColor","componentDidUpdate","console","log","backGroundColor","document","body","backgroundColor","render","toString","color","width","LightTheme","DarkTheme","mapStateToProps","colorBackground","colorButtons","colorFont","mapDipatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Display from './Components/Display';\nimport Button from './Components/Button';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n\n  //constructor\n  constructor(props){\n    super(props);\n\n    this.state ={\n      input: \"\",\n      prevNum: 0,\n      prevOperand: \"+\",\n      showScientific: false,\n      \n    }\n\n    this.style = {\n      btn: {\n        btnColor: this.props.buttonColor,\n        btnFontColor: this.props.buttonFontColor\n      }\n    }\n\n  }\n\n  getInput = (a) => { this.setState({ input: this.state.input+a}) }\n\n  doProcess = (op) => {\n    let input1 = parseInt(this.state.input);\n\n    switch(this.state.prevOperand ){\n      case \"+\":\n          this.setState({ prevNum: this.state.prevNum + input1 , input:\"\"});\n          break;\n      \n      case \"-\":\n          this.setState({ prevNum: this.state.prevNum - input1 , input:\"\"});\n          break;\n\n      case \"*\":\n          this.setState({ prevNum: this.state.prevNum * input1 , input:\"\"});\n          break;\n\n      case \"/\":\n          this.setState({ prevNum: this.state.prevNum / input1 , input:\"\"});\n          break;\n\n      case \"=\":\n          this.setState({ prevNum: this.state.prevNum });\n          break;\n\n      default:\n          this.setState({input: \"ERROR\"});\n    }\n\n    this.setState({prevOperand: op});\n  }\n\n  //Triggers when clear button is pressed\n  doClearOp = () => {\n    this.setState({ prevNum: 0 , input:\"\"});\n  }\n\n\n\n\n  /*\n  * FUNCTIONS FOR TASK 2!\n  */\n  showScientificFunctions = () => {\n    const getVal = this.state.showScientific;\n    this.setState({\n      showScientific: !getVal\n    })\n  }\n  \n  flipInput = () => { this.setState({ input: -this.state.input });}\n  computeSquare = () => { this.setState({prevNum: this.state.input * this.state.input, input:\"\"});}\n  computeSqRoot = () => { this.setState({ prevNum: Math.sqrt(this.state.input), input: \"\"});}\n\n\n  /*\n  * FUNCTIONS FOR TASK 3!\n  */\n   componentDidUpdate(){\n     console.log(\"bg is \"+this.props.backGroundColor)\n     document.body.style.backgroundColor =  this.props.backGroundColor;\n   }\n\n  render(){\n    //console.log(\"[DEBUG: RENDER] prevNum: \"+this.state.prevNum+\" and input: \"+this.state.input);\n   return (\n    <div className=\"container\">\n      \n      <Display>    \n          {this.state.input === \"\" ? this.state.prevNum.toString() : this.state.input}\n      </Display>\n\n      <div className=\"keypad\"> \n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"1\")}>1</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"2\")}>2</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"3\")}>3</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"+\")}>+</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"4\")} >4</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"5\")} >5</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"6\")} >6</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"-\")} >-</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"7\")} >7</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"8\")}>8</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"9\")} >9</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"*\")}>*</Button>\n        </div>\n        <div className=\"BtnRow\">\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doClearOp()} >clear</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.getInput(\"0\")}>0</Button>\n          <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor}} click={() => this.doProcess(\"=\")}>=</Button>\n          <Button style={this.style.btn} click={() => this.doProcess(\"/\")}>/</Button>\n        </div>\n\n        <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor,width:\"100%\"}} click={() => this.showScientificFunctions()}>Scientific mode!</Button>\n\n        {this.state.showScientific ?\n               <div className=\"BtnRow\">\n                 <Button style={{backgroundColor: this.props.buttonColor, color: this.props.buttonFontColor,width:\"33.33%\"}} click={() => this.flipInput()}>Sign Flip</Button>\n                 <Button style={{width:\"33.33%\"}} click={() => this.computeSquare()}>Square</Button>\n                 <Button style={{width:\"33.33%\"}} click={() => this.computeSqRoot()}>Sq root</Button>\n               </div>  \n             : \"\" }\n\n        <div className=\"BtnRow\">\n          <Button style={{width: \"50%\"}} click={this.props.LightTheme}>Light Theme</Button>\n          <Button style={{width: \"50%\"}} click={this.props.DarkTheme}>Dark Theme</Button>\n        </div>\n        \n      </div>\n    </div>\n\n   );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      backGroundColor: state.colorBackground,\n      buttonColor: state.colorButtons,\n      buttonFontColor: state.colorFont\n  };\n}\nconst mapDipatchToProps = (dispatch) => {\n  return {\n      LightTheme : () => {dispatch({type: \"LIGHT_MODE\"})},\n      DarkTheme : () => {dispatch({type: \"DARK_MODE\"})}\n     \n  };\n}\n\nexport default connect(mapStateToProps,mapDipatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}